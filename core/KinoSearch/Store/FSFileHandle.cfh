/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

parcel KinoSearch;

/** File system FileHandle.
 */
class KinoSearch::Store::FSFileHandle cnick FSFH 
    inherits KinoSearch::Store::FileHandle {

    int      fd;
    void    *win_fhandle;
    void    *win_maphandle;
    int64_t  len;
    int64_t  page_size;
    char    *buf;

    /** Return a new FSFileHandle, or set Err_error and return NULL if
     * something goes wrong.
     *
     * @param path Filepath. 
     * @param flags FileHandle constructor flags.
     */
    inert incremented nullable FSFileHandle* 
    open(const CharBuf *path = NULL, uint32_t flags);

    inert nullable FSFileHandle* 
    do_open(FSFileHandle *self, const CharBuf *path = NULL, uint32_t flags);

    bool_t
    Window(FSFileHandle *self, FileWindow *window, int64_t offset, int64_t len);

    bool_t
    Release_Window(FSFileHandle *self, FileWindow *window);

    bool_t
    Read(FSFileHandle *self, char *dest, int64_t offset, size_t len);

    bool_t
    Write(FSFileHandle *self, const void *data, size_t len);

    int64_t
    Length(FSFileHandle *self);

    bool_t
    Close(FSFileHandle *self);
}


